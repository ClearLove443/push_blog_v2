const t=JSON.parse(`{"key":"v-3bdaa7bb","path":"/blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.html","title":"JavaScript 对象与 JSON 对象的相互转换","lang":"en-US","frontmatter":{"title":"JavaScript 对象与 JSON 对象的相互转换","date":"2021-05-10T17:10:23.000Z","tag":["JavaScript","json"],"category":["front-end-js"],"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"ES5 定义了全局对象 JSON，对解析 JSON 的行为制定了规范。 JSON 对象有两个方法：stringify() 和 parse()。 JSON.stringify( js 对象 [, 过滤器] [, 选项]) 二三参数可选，js 对象中的函数和原型成员将被忽略，值为 undefined 的属性也被跳过。 默认情况下，返回的 JSON 不包含任...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/v2/blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"JavaScript 对象与 JSON 对象的相互转换"}],["meta",{"property":"og:description","content":"ES5 定义了全局对象 JSON，对解析 JSON 的行为制定了规范。 JSON 对象有两个方法：stringify() 和 parse()。 JSON.stringify( js 对象 [, 过滤器] [, 选项]) 二三参数可选，js 对象中的函数和原型成员将被忽略，值为 undefined 的属性也被跳过。 默认情况下，返回的 JSON 不包含任..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-21T04:38:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"json"}],["meta",{"property":"article:published_time","content":"2021-05-10T17:10:23.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T04:38:09.000Z"}]]},"headers":[],"git":{"createdTime":1684643889000,"updatedTime":1684643889000,"contributors":[{"name":"ClearLove443","email":"1127280933@qq.com","commits":1}]},"readingTime":{"minutes":1.93,"words":578},"filePathRelative":"blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.md","localizedDate":"May 10, 2021","autoDesc":true}`);export{t as data};
