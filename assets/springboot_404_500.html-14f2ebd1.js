const t=JSON.parse(`{"key":"v-c41803dc","path":"/blogs/springboot/springboot_404_500.html","title":"SpringBoot系列: 404、500异常页面配置","lang":"en-US","frontmatter":{"title":"SpringBoot系列: 404、500异常页面配置","date":"2021-11-01 21:30:39","tag":["SpringBoot系列","异常页面","web"],"category":["back-end-java"],"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"当出现异常的场景下，如 404 请求 url 不存在，，403 无权，500 服务器异常时，我们可以如何处理 异常页面配置 在 SpringBoot 项目中，本身提供了一个默认的异常处理页面，当我们希望使用自定义的 404,500 等页面时，可以如何处理呢？ 1. 默认异常页面配置 在默认的情况下，要配置异常页面非常简单，在资源路径下面，新建 erro...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/push_blog_v2/blogs/springboot/springboot_404_500.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"SpringBoot系列: 404、500异常页面配置"}],["meta",{"property":"og:description","content":"当出现异常的场景下，如 404 请求 url 不存在，，403 无权，500 服务器异常时，我们可以如何处理 异常页面配置 在 SpringBoot 项目中，本身提供了一个默认的异常处理页面，当我们希望使用自定义的 404,500 等页面时，可以如何处理呢？ 1. 默认异常页面配置 在默认的情况下，要配置异常页面非常简单，在资源路径下面，新建 erro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-21T04:38:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"SpringBoot系列"}],["meta",{"property":"article:tag","content":"异常页面"}],["meta",{"property":"article:tag","content":"web"}],["meta",{"property":"article:published_time","content":"2021-11-01T21:30:39.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T04:38:09.000Z"}]]},"headers":[{"level":2,"title":"异常页面配置","slug":"异常页面配置","link":"#异常页面配置","children":[]},{"level":2,"title":"项目源码","slug":"项目源码","link":"#项目源码","children":[]}],"git":{"createdTime":1684643889000,"updatedTime":1684643889000,"contributors":[{"name":"ClearLove443","email":"1127280933@qq.com","commits":1}]},"readingTime":{"minutes":2.45,"words":736},"filePathRelative":"blogs/springboot/springboot_404_500.md","localizedDate":"November 1, 2021","autoDesc":true}`);export{t as data};
