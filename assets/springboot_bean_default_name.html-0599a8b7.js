const e=JSON.parse(`{"key":"v-44614708","path":"/blogs/springboot/springboot_bean_default_name.html","title":"Spring中生成Bean时默认生成名称策略","lang":"en-US","frontmatter":{"title":"Spring中生成Bean时默认生成名称策略","date":"2021-12-05 13:42:40","tag":["springboot"],"category":["back-end-java"],"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"在使用注解生成 Bean 的时候，如果没有指定 Bean 的名称，如@Componet(\\"mytable\\")，则 Spring 会使用默认的名称生成策略，具体源码如下: Spring 在给 Bean 生成名字的时候，会调用 generateBeanName 方法，这个方法会先尝试获取注解括号中的名字，也就是用户自定义的名称，如果没有获取到，则调用 bu...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/push_blog_v2/blogs/springboot/springboot_bean_default_name.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"Spring中生成Bean时默认生成名称策略"}],["meta",{"property":"og:description","content":"在使用注解生成 Bean 的时候，如果没有指定 Bean 的名称，如@Componet(\\"mytable\\")，则 Spring 会使用默认的名称生成策略，具体源码如下: Spring 在给 Bean 生成名字的时候，会调用 generateBeanName 方法，这个方法会先尝试获取注解括号中的名字，也就是用户自定义的名称，如果没有获取到，则调用 bu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-21T04:38:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:published_time","content":"2021-12-05T13:42:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T04:38:09.000Z"}]]},"headers":[],"git":{"createdTime":1684643889000,"updatedTime":1684643889000,"contributors":[{"name":"ClearLove443","email":"1127280933@qq.com","commits":1}]},"readingTime":{"minutes":2.11,"words":634},"filePathRelative":"blogs/springboot/springboot_bean_default_name.md","localizedDate":"December 5, 2021","autoDesc":true}`);export{e as data};
