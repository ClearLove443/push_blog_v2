const e=JSON.parse(`{"key":"v-0593ff87","path":"/blogs/docker/docker_keep_pod_running.html","title":"Kubernetes上保持运行docker容器","lang":"en-US","frontmatter":{"title":"Kubernetes上保持运行docker容器","date":"2023-10-29T11:25:55.000Z","category":["deploy"],"tag":["docker","k8s","kubernetes"],"sticky":false,"star":false,"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"保持docker 的容器运行不停止，有以下几种方法 docker 1. docker run 使用pseudo-tty和detach选项（docker run命令上的-itd选项）来保持容器在Docker容器上运行，不会关闭。 2. 使用docker-compose 3. 指定永不完成的任务 4. Dockerfile 指定 k8s 1. pod 指定...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/v2/blogs/docker/docker_keep_pod_running.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"Kubernetes上保持运行docker容器"}],["meta",{"property":"og:description","content":"保持docker 的容器运行不停止，有以下几种方法 docker 1. docker run 使用pseudo-tty和detach选项（docker run命令上的-itd选项）来保持容器在Docker容器上运行，不会关闭。 2. 使用docker-compose 3. 指定永不完成的任务 4. Dockerfile 指定 k8s 1. pod 指定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-10-29T05:15:34.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"k8s"}],["meta",{"property":"article:tag","content":"kubernetes"}],["meta",{"property":"article:published_time","content":"2023-10-29T11:25:55.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-29T05:15:34.000Z"}]]},"headers":[{"level":2,"title":"docker","slug":"docker","link":"#docker","children":[]},{"level":2,"title":"k8s","slug":"k8s","link":"#k8s","children":[]}],"git":{"createdTime":1698556534000,"updatedTime":1698556534000,"contributors":[{"name":"ClearLove443","email":"2029336036@qq.com","commits":1}]},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"blogs/docker/docker_keep_pod_running.md","localizedDate":"October 29, 2023","autoDesc":true}`);export{e as data};
