const t=JSON.parse(`{"key":"v-3439d145","path":"/blogs/springboot/springboot_configure_multiple_dataSource.html","title":"Spring Boot配置多个DataSource","lang":"en-US","frontmatter":{"title":"Spring Boot配置多个DataSource","date":"2021-09-27T20:34:33.000Z","tag":["java","multiple dataSource","jdbc"],"category":["back-end-java"],"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"使用 Spring Boot 时，默认情况下，配置 DataSource 非常容易。Spring Boot 会自动为我们配置好一个 DataSource。 如果在 application.yml 中指定了 spring.datasource 的相关配置，Spring Boot 就会使用该配置创建一个 DataSource。如果在 application...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/push_blog_v2/blogs/springboot/springboot_configure_multiple_dataSource.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"Spring Boot配置多个DataSource"}],["meta",{"property":"og:description","content":"使用 Spring Boot 时，默认情况下，配置 DataSource 非常容易。Spring Boot 会自动为我们配置好一个 DataSource。 如果在 application.yml 中指定了 spring.datasource 的相关配置，Spring Boot 就会使用该配置创建一个 DataSource。如果在 application..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-21T04:38:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"multiple dataSource"}],["meta",{"property":"article:tag","content":"jdbc"}],["meta",{"property":"article:published_time","content":"2021-09-27T20:34:33.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T04:38:09.000Z"}]]},"headers":[{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1684643889000,"updatedTime":1684643889000,"contributors":[{"name":"ClearLove443","email":"1127280933@qq.com","commits":1}]},"readingTime":{"minutes":2.46,"words":738},"filePathRelative":"blogs/springboot/springboot_configure_multiple_dataSource.md","localizedDate":"September 27, 2021","autoDesc":true}`);export{t as data};
