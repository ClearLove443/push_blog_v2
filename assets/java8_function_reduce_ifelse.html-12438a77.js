const e=JSON.parse(`{"key":"v-3e4e8e52","path":"/blogs/java/java8_function_reduce_ifelse.html","title":"妙用Java 8中的 Function接口 消灭if...else...","lang":"en-US","frontmatter":{"title":"妙用Java 8中的 Function接口 消灭if...else...","date":"2022-03-06T10:58:17.000Z","tag":["java8","function"],"category":["back-end-java"],"published":true,"hideInList":false,"feature":null,"isTop":false,"description":"函数式接口 匿名函数和闭包 的体现 java 中无法把一个函数作为参数进行传递，返回结果也无法是一个函数; 参数和返回只能是基本变量和实例化的对象; 函数式接口： 1. 如果一个接口只有一个抽象方法，则是函数式接口。 2. 如果某个接口上声明了 FunctionalInterface 注解，则是函数式接口。 3. 如果接口只有一个抽象方法，但是没有声明...","head":[["meta",{"property":"og:url","content":"https://clearlove443.github.io.v2/v2/blogs/java/java8_function_reduce_ifelse.html"}],["meta",{"property":"og:site_name","content":"clearlove's blog"}],["meta",{"property":"og:title","content":"妙用Java 8中的 Function接口 消灭if...else..."}],["meta",{"property":"og:description","content":"函数式接口 匿名函数和闭包 的体现 java 中无法把一个函数作为参数进行传递，返回结果也无法是一个函数; 参数和返回只能是基本变量和实例化的对象; 函数式接口： 1. 如果一个接口只有一个抽象方法，则是函数式接口。 2. 如果某个接口上声明了 FunctionalInterface 注解，则是函数式接口。 3. 如果接口只有一个抽象方法，但是没有声明..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-21T04:38:09.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:tag","content":"java8"}],["meta",{"property":"article:tag","content":"function"}],["meta",{"property":"article:published_time","content":"2022-03-06T10:58:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T04:38:09.000Z"}]]},"headers":[{"level":2,"title":"函数式接口","slug":"函数式接口","link":"#函数式接口","children":[{"level":3,"title":"匿名函数和闭包 的体现","slug":"匿名函数和闭包-的体现","link":"#匿名函数和闭包-的体现","children":[]},{"level":3,"title":"函数式接口：","slug":"函数式接口-1","link":"#函数式接口-1","children":[]}]},{"level":2,"title":"Function 函数式接口","slug":"function-函数式接口","link":"#function-函数式接口","children":[{"level":3,"title":"FunctionalInterface 接口","slug":"functionalinterface-接口","link":"#functionalinterface-接口","children":[]},{"level":3,"title":"Supplier 供给型函数","slug":"supplier-供给型函数","link":"#supplier-供给型函数","children":[]},{"level":3,"title":"Consumer 消费型函数","slug":"consumer-消费型函数","link":"#consumer-消费型函数","children":[]},{"level":3,"title":"Runnable 无参无返回型函数","slug":"runnable-无参无返回型函数","link":"#runnable-无参无返回型函数","children":[]},{"level":3,"title":"Function 函数","slug":"function-函数","link":"#function-函数","children":[]},{"level":3,"title":"BiFunction 函数","slug":"bifunction-函数","link":"#bifunction-函数","children":[]},{"level":3,"title":"BinaryOperator 函数","slug":"binaryoperator-函数","link":"#binaryoperator-函数","children":[]},{"level":3,"title":"Predicate 函数","slug":"predicate-函数","link":"#predicate-函数","children":[]}]},{"level":2,"title":"使用小技巧","slug":"使用小技巧","link":"#使用小技巧","children":[{"level":3,"title":"处理抛出异常的 if","slug":"处理抛出异常的-if","link":"#处理抛出异常的-if","children":[]},{"level":3,"title":"处理 if 分支操作","slug":"处理-if-分支操作","link":"#处理-if-分支操作","children":[]},{"level":3,"title":"如果存在值执行消费操作，否则执行基于空的操作","slug":"如果存在值执行消费操作-否则执行基于空的操作","link":"#如果存在值执行消费操作-否则执行基于空的操作","children":[]}]},{"level":2,"title":"结尾","slug":"结尾","link":"#结尾","children":[]}],"git":{"createdTime":1684643889000,"updatedTime":1684643889000,"contributors":[{"name":"ClearLove443","email":"1127280933@qq.com","commits":1}]},"readingTime":{"minutes":13.76,"words":4129},"filePathRelative":"blogs/java/java8_function_reduce_ifelse.md","localizedDate":"March 6, 2022","autoDesc":true}`);export{e as data};
